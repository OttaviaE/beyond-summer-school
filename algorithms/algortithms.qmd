---
title: "Say 'when': Item response theory procedures for
shortening tests"
author: "Ottavia M. Epifania & Friends"
format: 
  revealjs: 
    theme: mytheme.scss
    logo: "www/psicostat.jpg"
    footer: "Beyond summer school @ DiPSCo"
    transition: none
    transition-speed: slow
    background-transition: fade
    slide-number: true
    show-slide-number: print
# background-opacity: "0.45"
#    data-background-size: 400px, cover
#    data-background-position: 50% 10%, center
# server: shiny
---


```{css include = FALSE}
.reveal .slide-logo {
  height: 100px !important;
  width: 100px !important;
  max-width: unset !important;
  max-height: unset !important;
}
.title-hex{
  height: 10px;
  align: right;
  float: right;
}
.h3 {
text-align: center;
}
```



```{r, setup, include=FALSE}
library(knitr)
library(shiny)
library(ggplot2)
library(tidyverse)
library(emoji)
library(wesanderson)
hexes <- function(x) {
  x <- rev(sort(x))
  markup <- function(img) glue::glue('<img width="10%" height="10%" src="www/{img}.jpg" class="title-hex">')
  res <- purrr::map_chr(x, markup)
  paste0(res, collapse = "")
}
IRT <- function(theta, a = 1, b = 0, c = 0,e = 1) {
  y <- c + (e - c) * exp(a * (theta - b)) / (1 + exp(a * (theta - b)))
  return(y)
}
# calcola l'IIF per un item specifico
i_info <- function(b, a=1,c=0, e= 1,  theta = seq(-5,5,length.out=1000)){
  Ii = (a^2)*IRT(theta, b = b, a = a, e = e )*(1- IRT(theta, b = b, a = a, e = e ))
  return(Ii)
}
# calcola l'IIF di tutti gli item e restituisce in una lista di lunghezza ugaule a tutti 
# gli item per cui si è calcolata l'IIF
item_info <- function(ipar, theta = seq(-5,5,length.out=1000)){
  item <- NULL
  if (any(colnames(ipar) == "e")) {
    for(i in 1:nrow(ipar)){
      item[[i]] <- i_info(b = ipar[i, "b"],a = ipar[i, "a"], e = ipar[i, "e"], theta = theta)
    } 
  } else {
    for(i in 1:nrow(ipar)){
      item[[i]] <- i_info(b = ipar[i, "b"],a = ipar[i, "a"], theta = theta)
    }
  }
  item = data.frame(do.call("cbind", item))
  colnames(item) = rownames(ipar)
  return(item)
}
set.seed(999)
```



# Introduction

## The "Friends":

<br>

<br>

<!-- ::: {.callout-tip} -->

> Pasquale Anselmi, Egidio Robusto, Livio Finos, Gianmarco Altoè, Luigi Lombardi

<!-- ::: -->

<br>

<br>


<font size="4">

> ###  
> **L'idea che la soluzione venga dall'intuizione del matto genio per natura e non dal lavoro complicato e _collettivo_ di centinaia, migliaia di scienziati, questa idea è un'idea falsa e sbagliata, che toglie valore all'Università [...]**
> 
> \  
> — *Matteo Bordone*, 19 Febbraio 2025

</font>

## The logic



:::: {.columns}

:::{.column width="20%"}
```{r}
knitr::include_graphics("www/lisa.png")
```

$$A_{\text{Lisa}}$$
:::

:::{.column width="20%"}

<br>

<br>

$$\mathbf{Q_1}$$

$3 +2 = ?$

$$d_{\text{q}_1}$$
:::

:::{.column width="20%"}

<br>

<br>

$$\mathbf{Q_2}$$

$3x +2y + 2 = ?$

$$d_{\text{q}_2}$$
:::

:::{.column width="20%"}
<div text-align="right">
```{r}
#| fig-align: right
#| out-width: "110%"
knitr::include_graphics("www/bart.png")
```

$$A_{\text{Bart}}$$

</div>
:::
::::

<font size="4">

Bart, Lisa, $\mathbf{Q_1}$, and $\mathbf{Q_2}$ are all on the same latent trait: 

$\dfrac{A_p}{d_i} > 1$ if $A_p > d_i$

$\dfrac{A_p}{d_i} < 1$ if $A_p < d_i$

</font>

## Basics of IRT

<br>

The probability of an observed response (observed variable) depends on the characteristics of both the person and the item

The characteristics of the <span style="color:#9B0014;">person</span> can be described by a parameter of the person  $\rightarrow$  latent trait (e.g., intelligence, self-esteem, extraversion etc.)



The characteristics of the <span style="color:#3a5fcd;">item</span> can be described by one or more parameters (**difficulty**, **discrimination**, **guessing**, **careless error**)

The item, the person and their characteristics are located on the same latent trait





## To each its own... IRT model 

<br>

Different IRT models according to:

- **Latent trait**: 

::: {.fragment .highlight-red fragment-index=2}

  - Uni dimensional model

:::

  - Multidimensional model
  
- **Response categories**: 

::: {.fragment .highlight-red fragment-index=2}

  - Dichotomous items (Two response categories, e.g., true/false, agree/disagree)

:::

  - Polytomous items (at least 3 response categories, e.g., Likert-type scale)
  
## Models for dichotomous items

<br>

These models can be distinguished according to the number of parameters describing the characteristics of the items. 

- One-Parameter Logistic Model (1-PL)

- Two-Parameter Logistic Model (2-PL; Birnbaum, 1968)

- Three-Parameter Logistic Model (3-PL; Lord, 1980)

- Four-Parameter Logistic Model (4-PL; Barton & Lord, 1981)

<!-- ## In general -->

<!-- <br> -->


<!-- - Person and items parameters are on the same latent trait  -->

<!-- - As the distance on the latent trait between the person parameter and the item parameter increases, the probability of a correct response changes  -->

<!-- - When the parameter of the person matches the parameter of the item, then the probability of observing a correct response is 50% (well....not always) -->



# The 2-Parameter Logistic Model

## The Item Response Function

<br>

$$P(x_{pi} = 1|\theta_p, b_i, a_i) = \frac{\exp[a_i(\theta_p - b_i)])}{1 + \exp[a_i(\theta_p - b_i)]}$$

<br>


:::: {.columns}

::: {.column width="40%"}
<font size="5">

$\theta_p$: Latent trait level of person $p$

$b_i$: Difficulty of item $i$

$a_i$: Discrimination of item $i$

</font>

:::

::: {.column width="60%"}

::: {.r-stack}

::: {.fragment .fade-in-then-out}
```{r}
#| out-width: 100%

library(png)
lisa = readPNG( "www/lisa.png")
bart = readPNG( "www/bart.png")
theta = seq(-4,4, length.out = 1000)
par(mar = c(5,7,4,2) + 0.1) 
plot(theta, IRT(theta, a = 0.5, b = 0), 
     type = "l", 
     ylab = expression(paste("P(", x[p][i],  "= 1|", theta[p], ", ", b[i], ", ", a[i],  ")")), 
     ylim = c(0,1 ), cex.lab= 2, 
     cex.axis =1.5, xlab = expression(theta), lwd = 3, col = "seagreen")

segments(-7, exp(0.5 *(1))/(1+exp(0.5 *(1))), 
         1, exp(0.5 *(1))/(1+exp(0.5 *(1))), 
         col = "firebrick", lty = 3, lwd = 3)
mycol = rgb(.54, .114, .89)
segments(1, -exp(0.5 *(1))/(1+exp(0.5 *(1))), 
        1, exp(0.5 *(1))/(1+exp(0.5 *(1))), 
         col = "firebrick", lty = 3, lwd = 3)

segments(-7, exp(0.5 *(-1))/(1+exp(0.5 *(-1))), 
         -1, exp(0.5 *(-1))/(1+exp(0.5 *(-1))), 
         col = "royalblue4", lty = 3, lwd = 3)

rasterImage(lisa, 0.6, -0.10, 1.5, 0.15)
rasterImage(bart, -1.5, -0.10, -0.5, 0.15)
segments(-1, -exp(0.5 *(-1))/(1+exp(0.5 *(-1))),
        -1, exp(0.5 *(-1))/(1+exp(0.5 *(-1))),
         col = "royalblue4", lty = 3, lwd = 3)

```
:::

::: {.fragment .fade-in}
```{r}
#| out-width: 100%

library(png)
lisa = readPNG( "www/lisa.png")
bart = readPNG( "www/bart.png")
theta = seq(-4,4, length.out = 1000)
par(mar = c(5,7,4,2) + 0.1) 
plot(theta, IRT(theta, a = 0.5, b = 0), 
     type = "l", 
     ylab = expression(paste("P(", x[p][i],  "= 1|", theta[p], ", ", b[i], ", ", a[i],  ")")), 
     ylim = c(0,1 ), cex.lab= 2, 
     cex.axis =1.5, xlab = expression(theta), lwd = 3, col = "seagreen")

segments(-7, exp(0.5 *(1))/(1+exp(0.5 *(1))), 
         1, exp(0.5 *(1))/(1+exp(0.5 *(1))), 
         col = "firebrick", lty = 3, lwd = 3)
mycol = rgb(.54, .114, .89)
segments(1, -exp(0.5 *(1))/(1+exp(0.5 *(1))), 
        1, exp(0.5 *(1))/(1+exp(0.5 *(1))), 
         col = "firebrick", lty = 3, lwd = 3)

segments(-7, exp(0.5 *(-1))/(1+exp(0.5 *(-1))), 
         -1, exp(0.5 *(-1))/(1+exp(0.5 *(-1))), 
         col = "royalblue4", lty = 3, lwd = 3)

rasterImage(lisa, 0.6, -0.10, 1.5, 0.15)
rasterImage(bart, -1.5, -0.10, -0.5, 0.15)
segments(-1, -exp(0.5 *(-1))/(1+exp(0.5 *(-1))),
        -1, exp(0.5 *(-1))/(1+exp(0.5 *(-1))),
         col = "royalblue4", lty = 3, lwd = 3)

## aggiunge l'item più discirminativo a partità di tutto il resto 

lines(theta, IRT(theta, a = 1.5, b = 0), 
     type = "l", 
     ylab = expression(paste("P(", x[p][i],  "= 1|", theta[p], ", ", b[i], ", ", a[i],  ")")), 
     ylim = c(0,1 ), cex.lab= 2, 
     cex.axis =1.5, xlab = expression(theta), lwd = 3, col = "darkorchid")
segments(-7, exp(1.5 *(1))/(1+exp(1.5 *(1))), 
         1, exp(1.5 *(1))/(1+exp(1.5 *(1))), 
         col = "firebrick", lty = 3, lwd = 3)
segments(1, -exp(1.5 *(1))/(1+exp(1.5 *(1))), 
        1, exp(1.5 *(1))/(1+exp(1.5 *(1))), 
         col = "firebrick", lty = 3, lwd = 3)

segments(-7, exp(1.5 *(-1))/(1+exp(1.5 *(-1))), 
         -1, exp(1.5 *(-1))/(1+exp(1.5 *(-1))), 
         col = "royalblue4", lty = 3, lwd = 3)
segments(-1, -exp(1.5 *(-1))/(1+exp(1.5 *(-1))),
        -1, exp(1.5 *(-1))/(1+exp(1.5 *(-1))),
         col = "royalblue4", lty = 3, lwd = 3)

```
:::

:::


:::

::::




## Item Information Function: 


$$IIF_i = a_i^2P(\theta, b_i, a_i)[1-P(\theta, b_i, a_i)]$$
```{r}
ii = data.frame(a = c(1, 2), b = c(0,0), c = c(0,0), e = c(1,1))
iifs = item_info(ii, theta)
par(mar = c(5,7,4,2) + 0.1) 
plot(theta, iifs[,1], 
     type = "l", 
     ylab = "IIFs",  cex.lab= 2, 
     cex.axis =1.5, xlab = expression(theta), lwd = 3, ylim = c(0, 1), col = "seagreen")
lines(theta, iifs[,2], col = "firebrick")
```




## Test Information Function: 

$$TIF = \sum_{i = 1}^{||B||} IIF_i$$



$B$: Set of items of a full-length test ($||X||$ cardinality of set $X$)

```{r}
#| fig-align: "center"
#| out-width: 100%

plot(theta, rowSums(iifs), 
     type = "l", 
     ylab = "IIFs",  cex.lab= 2, 
     cex.axis =1.5, xlab = expression(theta), lwd = 3)
```


## Intuitively 

```{r}
knitr::include_app("https://ottaviae.shinyapps.io/irt-app/", height = "800px")
```

# Short Test Forms

## Short Test Forms -- Why?

<br>

Many items $\rightarrow$ good measurement precision, great reliability and so on
	
::: {.r-stack}
Not always!
:::

. . .

<br>

People might get tired and frustrated 
	 
::: {.callout-tip}
## IRT models for the win
		
Being focused on the item information and on the ability of each item to measure different levels of the latent trait, IRT models provide an ideal framework for developing STF (and not torturing people)	
:::

## Short Test Forms in Item Response Theory 

::: {.fragment fragment-index=2}

### Static STFs

`r emoji("grinning cat")` Equal for all respondents 

`r emoji("grinning cat")` Can be administered paper-and-pencil/computerized versions

`r emoji("crying cat")` Might not provide adequate measurement precision of certain regions of the latent trait

:::

::: {.fragment fragment-index=3}

### Adaptive STFs

`r emoji("grinning cat")` Tailored on the actual level of ability of each respondent

`r emoji("grinning cat")` Avoid frustration and boredom 

`r emoji("crying cat")`  Fairness issues in specific evaluation contexts

:::

## Automated Test Assembly

Works on the definition of the desired characteristics that the STF should have in the form of *target information function*: 

- Absolute Information: Both the shape (the shape) and the height (amount of information) are defined 

> minmax algorithm: minimize the maximum distance between the target information function and the information function of the STF

- Relative Information: Only the shape is defined through the definition of discrete latent trait levels of interest for which the information needs to be maximized

> maxmin algorithm: maximize the minimum information for the defined levels of the latent trait

# New algorithms

## Some premises 

:::: {.columns}

:::{.column width="60%"} 

::: {.callout-note}
## Key concept

<font size = "4">
**TIF target** ($TIF^*$) describing the desired characteristics of a test
</font>
:::

::: {.callout-tip}
## The aim of the algorithms

<font size = "4">
*Minimize the distance* between TIF$^*$ and that of the short test forms (STFs) 
</font>
:::


::: {.callout-warning}
## Their differences

<font size = "4">
The method for selecting and including the items in $Q \subset B$ from the item bank
</font>
:::




::: {.callout-important}
## Mean TIF

<font size = "4">
TIF is considered as mean TIF $\rightarrow$ as the number of items increases, the TIF increases
</font>
:::

:::

::: {.column width="40%"}


<br>


<br>

$B$: Set of items in the full length test 

$Q_x \subset B$: Subset of items selected by $x$

$||A||$: cardinality of set $A$

$i^*$: Item considered for inclusion at each iteration
:::

::::

## The gold standard: Bruto 

::: {.r-stack}

![](www/bear.jpg){width="250" height="150"}

:::


$\forall Q \in\mathcal{Q} = 2^B \setminus \{\emptyset, B\}$, 


1. $TIF^{Q} =  \frac{\sum_{i \in Q} IIF_i}{||Q||}$
2. $\overline{\Delta}_{TIF^{Q}} =  \mathit{mean}(|TIF^* - TIF^{Q}|)$

$Q_{bruto} = \arg \min_{Q \in \mathcal{Q}} \overline{\Delta}_{TIF^{Q}}$

. . . 

It is "doomed" to find the best combination of items `r emoji("1st_place_medal")`

## In general 

```{r}
#| fig-align: center


knitr::include_graphics("www/str-algo.png")
```


## Item Locating Algorithm – ILA

::: {.r-stack}

::: {.fragment .fade-in-then-out}
```{r}
#| fig-cap: "TIF Target, $k = 0$"
#| fig-cap-location: top
knitr::include_graphics("www/TIF-target-1.png")
```
:::

::: {.fragment .fade-in-then-out}
```{r}
#| fig-cap: "$k = 1$"
#| fig-cap-location: top
knitr::include_graphics("www/TIF-first-1.png")
```
:::

::: {.fragment .fade-in-then-out}
```{r}
#| fig-cap: "$k = 2$"
#| fig-cap-location: top
knitr::include_graphics("www/TIF-second-1.png")
```
:::

::: {.fragment .fade-in-then-out}
```{r}
#| fig-cap: "$k = 3, stop!$"
#| fig-cap-location: top
knitr::include_graphics("www/TIF-third-1.png")
```
:::

:::

<!-- ::: {.panel-tabset} -->

<!-- ### TIF Target, $k = 0$ -->

<!-- ```{r} -->
<!-- knitr::include_graphics("www/TIF-target-1.png") -->
<!-- ``` -->



<!-- ### $k = 1$ -->


<!-- ```{r} -->
<!-- knitr::include_graphics("www/TIF-first-1.png") -->
<!-- ``` -->




<!-- ### $k = 2$ -->

<!-- ```{r} -->
<!-- knitr::include_graphics("www/TIF-second-1.png") -->
<!-- ``` -->



<!-- ### $k = 3$, stop! -->

<!-- ```{r} -->
<!-- knitr::include_graphics("www/TIF-third-1.png") -->
<!-- ``` -->

<!-- ::: -->


## ILA & ISA 


![](www/twins.jpg){.absolute top=50 right=50 width="250" height="150"}

<br>

<br>



:::: {.columns}


::: {.column width="50%"}

ILA

<font size="4">
At $k = 0$: $TIF^0(\theta) = 0 \, \forall \theta$, $Q^0 = \emptyset$. For $k \geq 0$,


1. $\theta_{target} := \arg \max |TIF^* - TIF^{k}|$

::: {.fragment .highlight-red}
2. $i^* := \arg \min_{i \in B\setminus Q^{k}} |\theta_{target} - b_i|$
:::

3.  $pTIF_{i^*} = \frac{TIF^k + IIF_{i^*}}{||Q^{k}|| + 1}$ 

4. Termination Criterion: $|TIF^* - pTIF_{i^*}| \geq |TIF^* - TIF^{k}|$: 
  - FALSE:  $Q^{k+1} = Q^{k} \cup \{i^*\}$, $TIF^{k+1} = pTIF_{i^*}$, iterates 1-4 
  - TRUE: Stop, $Q_{ILA} = Q^k$
  
</font>
:::

::: {.column width="50%"}

ISA


<font size="4">
At $k = 0$: $TIF^0(\theta) = 0 \, \forall \theta$, $Q^0 = \emptyset$. For $k \geq 0$,

1. $\theta_{target} := \arg \max |TIF^* - TIF^{k}|$

::: {.fragment .highlight-red}
2. $i^* := \arg \max_{i \in B\setminus Q^k} IIF_i(\theta_{target})$
:::

3.  $pTIF_{i^*} = \frac{TIF^k + IIF_{i^*}}{||Q^{k}|| + 1}$ 

4. Termination Criterion: $|TIF^* - pTIF_{i^*}| \geq |TIF^* - TIF^{k}|$: 
  - FALSE:  $Q^{k+1} = Q^{k} \cup \{i^*\}$, $TIF^{k+1} = pTIF_{i^*}$, iterates 1-4 
  - TRUE: Stop, $Q_{ISA} = Q^k$
  
</font>
::: 

::::

## Frank (I solve problems)

![](www/mrwolf.jpg){.absolute top=50 right=40 width="250" height="150"}

$\theta$-targets are convenient but misleading

. . .


At $k = 0$: $TIF^0(\theta) = 0 \, \forall \theta$, $Q^0 = \emptyset$. For $k \geq 0$,


1. $A^k = B \setminus Q^k$

2. $\forall i \in A^k$, $pTIF_{i}^k = \frac{TIF^k + IIF_{i}}{||Q^k||+1}$

3. $i^* = \arg \min_{i \in A^k} |TIF^* - pTIF_i^k|$

4. Termination criterion: $|TIF^* - pTIF_{i^*}| \geq |TIF^* - TIF^{k}|$: 

  - FALSE, $k = k + 1,$ $Q^{k+1} = Q^k \cup \{D\}$, iterates 1-4

  - TRUE, stops, $Q_{Frank} = Q^k$

## Simulation time

::: {.panel-tabset}

## Simulation design

100 replications:

1. Generate an item bank $B$ of $11$ items: 
        
      - Difficulty parameters: $\mathcal{U}(-3, 3)$
        
      - Discrimination parameters:  $\mathcal{U}(.90, 2.0)$
		 
2. Random item selections of lengths $l$ from $B$ ($M_l = 5.01 \pm 2.99$) + randomly drawn values $\mathcal{U}(-0.20, 0.20)$ $\rightarrow$ $TIF^*$ 
		
3. Considering $TIF^*$ at Step 2 and item parameters at Step 1:

      - Bruto  $\rightarrow$ Systematically tests
      
      - ILA/ISA  $\rightarrow$ Forwardly searches considering a single $\theta$
      - Frank $\rightarrow$ Forwardly searches considering the whole latent trait 		

## Comparisons criteria 


$Q_{\text{Bruto}}$ is the item selection that gets closer to the $\text{TIF}^*$: `r emoji("1st_place_medal")`

1. Successful attempts: Did the algorithm find an item combination able to approximate the  $\text{TIF}^*$ without running out of items in $B$? 

2. Percentile rank: How close to the $\text{TIF}^*$ are $Q_x$, with $x \in \{\text{ILA}, \text{ISA}, \text{Frank}\}$, with respect to $Q_{\text{Bruto}}$?  

> $Q_x \subseteq \mathcal{Q}$,  and   $\forall (Q, Q') \in \mathcal{Q}, Q \preceq Q' \Rightarrow mean(|TIF^* - TIF_Q| \leq |TIF^* - TIF_{Q'}|)$ 

3. Symmetric distance: Do $x$ and Bruto agree on the items to include in STF? $Q_x \Delta Q_{Bruto} = ||\{(Q_x \setminus Q_{Bruto}) \cup (Q_{Bruto} \setminus Q_{x}) \}||$  
:::

## Results 

::: {.panel-tabset}

## Success

```{r}
load("summary-comparison.RData")
library(ggplot2)
library(wesanderson)
ggplot(elapsed[!elapsed$name %in% "bruto_elapsed", ], 
       aes(x = name, y = value, color = name)) + geom_boxplot() + theme_light() + 
  ylab("Elapsed Time (Minutes)") +
  theme(legend.position = "none", 
        axis.title.y = element_text(size = 24), 
        axis.text = element_text(size = 22), 
        axis.title.x = element_blank())+ 
    scale_x_discrete(labels = c("Frank \n 100%", "ILA \n 93%", "ISA \n 82%")) + 
  scale_color_manual(values = wes_palette("AsteroidCity1"))
```
Bruto elapsed time: $10.77 \pm 0.29$

## Ranks

```{r}
ggplot(all_ranks, 
       aes(x = reorder(iter, rp), 
           y = rp, 
           color = alorigthm, shape = alorigthm)) + geom_point(size = 3) + theme_bw() +
  scale_color_manual(values = wes_palette("AsteroidCity1"), 
                     labels = c("Frank", "ILA", "ISA")) + xlab("Replication") + ylab("Percentile Rank") +
  scale_shape_manual(values = c(15, 17, 19), labels = c("Frank", "ILA", "ISA")) +
  theme(legend.position = "inside",
        legend.position.inside = c(.12, .8),
        legend.title = element_blank(), 
        axis.text.x = element_blank(), 
        axis.text.y = element_text(size = 22), 
        axis.title = element_text(size = 24), 
        legend.text = element_text(size = 22)) +
  guides(shape = guide_legend(override.aes = list(size = 5), direction = "horizontal"), 
         fill = guide_legend(direction = "horizontal")) + 
  geom_hline(yintercept = 10, linetype = 2, linewidth = 1, color = "darkgray") +
  geom_hline(yintercept = 50, linetype = 2, linewidth = 1, color = "darkgray")
```


## Distances


```{r}

long_dist = pivot_longer(the_distances[, c("replica", "ila_d", "isa_d", "frank_d")], 
                         cols = !replica)

my = long_dist %>%  
  group_by(name, value) %>%  
  summarise(n = n())

# ggplot(my, 
#        aes(x = factor(value), y = n, fill = name)) + geom_bar(stat = "identity", position = position_dodge(width = 0.5)) 

ggplot(long_dist, 
       aes(x = factor(name), y = value, color = name)) + geom_boxplot(width=.5) + theme_bw() +
  ylab("Symmetric Distance") + 
  stat_summary(fun.y=mean, geom="point") +
  scale_color_manual(values = wes_palette("AsteroidCity1"), 
                     labels = c("Frank", "ILA", "ISA")) + 
    scale_x_discrete(labels = c("Frank", "ILA", "ISA")) + 
  theme(legend.position = "none", 
        axis.text = element_text(size = 22), 
        axis.title.y = element_text(size = 24), 
        axis.title.x = element_blank())

```
## More Distances

```{r}
#| warning: false
my = apply(the_distances[,3:ncol(the_distances)], 2, table)
my_dfs <- lapply(my, function(x) {
  data.frame(distance = as.numeric(names(x)), freq = as.numeric(x))
})
my_dfs_named <- Map(function(df, name) {
  names(df)[2] <- name
  df
}, my_dfs, names(my_dfs))

# Merge all dataframes on 'distance' using Reduce
final_df <- Reduce(function(x, y) merge(x, y, by = "distance", all = TRUE), my_dfs_named)

freq_distance = pivot_longer(final_df, cols = !distance)
cs = freq_distance %>%  
  group_by(distance, name) %>% 
  summarize(cs = cumsum(value/82))

ggplot(cs, aes(x =  factor(distance), y = cs, color = name, group = name)) + geom_line(linewidth=1.2) + xlab("Symmetric Distance") + ylab("Cumulative Relative Frequency") + theme_bw() +  ylim(0,1) + scale_color_manual(values = wes_palette("AsteroidCity1"), 
                     labels = c("Frank", "ILA", "ISA")) + 
  theme(legend.position = "bottom", 
        legend.title = element_blank())
```



:::

# Response fatigue 

## The careless error

Lower the upper asymptote as described by $d$: 

$$P(x_{pi}= 1| \theta_p, b_i, a_i, c_i, d_i) = c_i + (d_i -c_i) \dfrac{\exp[a_i(\theta_p - b_i)]}{1 + \exp[a_i(\theta_p - b_i)]}$$
$c_i$: Lower asymptote: When $\theta \to -\infty$, $P(x_{pi} = c_i)$ (should be 0) *Lucky guess*

::: {.fragment .highlight-red}
$d_i$: Upper asymptote: When $\theta \to +\infty$, $P(x_{pi} = d_i)$ (should be 1) *Careless error*
:::

::: {.r-stack}
::: {.fragment .fade-in-then-out}
```{r}
#| out-width: "70%"
#| fig-align: "center"
theta = seq(-4,4, length.out = 1000)
par(mar = c(5,7,4,2) + 0.1) 
plot(theta, IRT(theta, a = 1.5, b = 0), 
     type = "l", 
     ylab = expression(paste("P(", x[p][i],  "= 1|", theta[p], ", ", b[i], ", ", a[i],  ")")), 
     ylim = c(0,1 ), cex.lab= 2, 
     cex.axis =1.5, xlab = expression(theta), lwd = 3, col = "seagreen")
abline(h = 1, lwd = 2, lty = 3, col = "darkgray")
```

:::


::: {.fragment .fade-in-then-out}
```{r}
#| out-width: "70%"
#| fig-align: "center"

par(mar = c(5,7,4,2) + 0.1) 
plot(theta, IRT(theta, a = 1.5, b = 0), 
     type = "l", 
     ylab = expression(paste("P(", x[p][i],  "= 1|", theta[p], ", ", b[i], ", ", a[i],  ")")), 
     ylim = c(0,1 ), cex.lab= 2, 
     cex.axis =1.5, xlab = expression(theta), lwd = 3, col="seagreen")

lines(theta, IRT(theta, a = 1.5, b = 0, e = .95), 
     type = "l", 
     ylab = expression(paste("P(", x[p][i],  "= 1|", theta[p], ", ", b[i], ", ", a[i],  ")")), 
     ylim = c(0,1 ), cex.lab= 2, 
     cex.axis =1.5, xlab = expression(theta), lwd = 3, col = "royalblue")
abline(h = 1, lwd = 2, lty = 3, col = "darkgray")
abline(h = .95, lwd = 2, lty = 3, col = "darkgray")

```

:::
:::




## Information Function 


$d$ is a property related to rank of presentation $r$ of item $i$: The longer the administration, the higher the probability of observing careless mistakes, the lower the asymptote $d_r$:

. . .

The $\text{IIF}_i$ accounts for the careless error: 


$$	\text{IIF}_{i}(r) = \dfrac{a_i^2[P(\theta)-c_i]^2[d_r - P(\theta)]^2}{(d_{r}-c_i)^2 P(\theta)Q(\theta)}$$
$r = \{0, 1, \ldots, ||B||\}$


## 

```{r}
knitr::include_app("https://ottaviae.shinyapps.io/app-tired/", height = "800px")
```


## Léon (I solve problems *efficiently*)

![](www/leon.jpg){.absolute top=30 right=30 width="250" height="150"}

At $k = 0$: $\text{TIF}^0(\theta) = 0 \, \forall \theta$, $Q^0 = \emptyset$. 

For $k \geq 0$,

1. $A^k = B \setminus Q^k$ 

2. $\forall i \in A^k$, $p\text{TIF}_{i}^k = \frac{\text{TIF}^k + \text{IIF}_{i}}{||Q^k||+1}$, with $r = \{0, 1, \ldots, ||Q^k||-1\}$

3. $i^* = \arg \min_{i \in A^k} (|\text{TIF}_B - \text{pTIF}_i^k|)$

4. Termination criterion: $|\text{TIF}_B - \text{pTIF}_{i^*}^k| \geq |\text{TIF}_B - \text{TIF}^{k}|$: 

	- FALSE:  $Q^{k+1} = Q^{k} \cup \{i^*\}$, $\text{TIF}^{k+1} = p\text{TIF}_{i^*}$, iterates 1-4 
		
	- TRUE: Stop, 
		$Q_{\text{Léon}} = Q^k$


## Simulation time

::: {.panel-tabset}

## Simulation design

100 replications, item bank of 50 items:

:::: {.columns}

::: {.column width="50%"}

$B$:

<font size="5">

- $b \sim \mathcal{U}(-3, 3)$
        
- $a \sim \mathcal{U}(.90, 2.0)$

- $c_i = 0$, $\forall i \in B$
      
- $d_i = 1$, $\forall i \in B$

</font>
:::

::: {.column width="50%"}

$B'$:

<font size="5">

- $b_i' = b_i$
        
- $a_i' = b_i$

- $c_i = 0$, $\forall i \in B'$
      
- $d_r = \exp(-0.01 r)$, with $r = \{0, \ldots, ||B|| -1\}$
      
</font>
:::

::::
        
2. $\text{TIF}^* = \text{TIF}_B = \sum_{i = 1}^{||B||} \frac{\text{IIF}_i}{||B||}$ `r emoji("1st_place_medal")`

3. Considering $TIF^*$: 

      - Frank:  STF from $B$
      
      - Léon: STF from $B'$

## Comparisons criteria 

1. Distance from $\text{TIF}^*$: 

> $\Delta_x = |\text{TIF}_B - \text{TIF}_{x}|$, with $x \in \{B', \text{Frank}, \text{Léon}\}$

2. Number of items selected by Frank and Léon 

:::

## Results

::: {.panel-tabset}

## Distance 

```{r}
rm(list=ls())
load("sis-2025-simulation.RData")
mycolor = c(wes_palette("Royal1", n =1), 
            wes_palette("AsteroidCity1", n =1),
           wes_palette("Darjeeling2", n =2)[2]  )
ggplot(res_tot, 
       aes(x = type, y = difference, color = type)) + 
  geom_boxplot() + 
  theme_light() + ylab(expression(paste("|", TIF[B], " - ",TIF[x], "|"))) + 
  scale_x_discrete(labels = c(expression(paste("B","'")), "Frank", "Léon")) +
  theme(axis.text = element_text(size = 22), 
        axis.title.y = element_text(size = 24), 
        axis.title.x = element_blank(), 
        legend.position = "none") + 
  scale_color_manual(values = mycolor)

```


## Number of items

```{r}
long_num = pivot_longer(numberItems, 
                        cols = !iteration)
ggplot(long_num, 
       aes(x = name, y = value, color = name)) + geom_boxplot() + 
  stat_summary(fun.y=mean, geom="point", shape=20, size=4, color=mycolor[2:3], fill=mycolor[2:3]) + 
  theme_light() + ylab("Number of items") + 
  scale_x_discrete(labels = c("Frank", "Léon")) +
  theme(axis.text = element_text(size = 22), 
        axis.title.y = element_text(size = 24), 
        axis.title.x = element_blank(), 
        legend.position = "none") + 
  scale_color_manual(values = mycolor[2:3])

```

:::

# In the end 

## What is missing 

- The estimation of the latent trait 

- The inclusion of "qualitative" criteria like ATA 

- A real data application 

But they are promising :) 


<br>

<br>


